long stackSize = pancakes.GetStackSize();
long numDiners = pancakes.GetNumDiners();

slave(long lo, long hi) {
  long firstItem = pancakes.GetStackItem(lo), prevItem = firstItem;
  long rotations = 0;
  for (long i = lo+1; i < hi; i++) {
    long item = pancakes.GetStackItem(i);
    if (item < prevItem) { rotations++; }

    prevItem = item;
  }
  masterNode.put(firstItem).put(rotations).putln(prevItem);
}

master() {
  anew(long, firsts, activeNodes, nodes[i].getlnLong());
  anew(long, rotations, activeNodes, nodes[i].getLong());
  anew(long, lasts, activeNodes, nodes[i].getLong());

  long out = rotations[0];
  for (i, 1, activeNodes) {
    out += rotations[i];
    if (firsts[i] < lasts[i-1]) {
      out++;
    }
  }
  println(out + 1);
}

{
  LINSPACE(stackSize);
  MASTER();
}
